{"ast":null,"code":"var _jsxFileName = \"/Users/kristonmcconnell/monsters-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\n// TODO to change this from a functional component to a class component we changed function App() to\n// TODO class App extends Component and then put the entire return statement inside of a render() { }\n// TODO that's all we need to do to convert on a basic level\n// TODO render() is a method\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n\n    // this state is always a json object\n    this.state = {\n      monsters: [{\n        name: 'kriston'\n      }, {\n        name: 'aster'\n      }, {\n        name: 'ridge'\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","logo","jsxDEV","_jsxDEV","App","constructor","state","monsters","name","render","className","children","map","monster","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kristonmcconnell/monsters-rolodex/src/App.js"],"sourcesContent":["import {Component} from \"react\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// TODO to change this from a functional component to a class component we changed function App() to\n// TODO class App extends Component and then put the entire return statement inside of a render() { }\n// TODO that's all we need to do to convert on a basic level\n// TODO render() is a method\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    // this state is always a json object\n    this.state = {\n      monsters: [\n        {\n          name: 'kriston',\n        },\n        {\n          name: 'aster',\n        },\n        {\n          name: 'ridge',\n        },\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.monsters.map((monster) => {\n            return <h1>{monster.name}</h1>\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAE/B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAC1BK,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;;IAEP;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE;MACR,CAAC,EACD;QACEA,IAAI,EAAE;MACR,CAAC,EACD;QACEA,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;EACH;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEN,OAAA;MAAKO,SAAS,EAAC,KAAK;MAAAC,QAAA,EAEhB,IAAI,CAACL,KAAK,CAACC,QAAQ,CAACK,GAAG,CAAEC,OAAO,IAAK;QACnC,oBAAOV,OAAA;UAAAQ,QAAA,EAAKE,OAAO,CAACL;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAChC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAEV;AACF;AAEA,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}