{"ast":null,"code":"var _jsxFileName = \"/Users/kristonmcconnell/monsters-rolodex/src/App.js\";\nimport { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\n// TODO to change this from a functional component to a class component we changed function App() to\n// TODO class App extends Component and then put the entire return statement inside of a render() { }\n// TODO that's all we need to do to convert on a basic level\n// TODO render() is a method\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // this state is always a json object\n    this.onSearchChange = event => {\n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    console.log('constructor');\n  }\n  componentDidMount() {\n    console.log('component did mount');\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    // whatever is returned from the above json will be passed into the users below\n    .then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n  render() {\n    console.log('render');\n    // these two consts allow us to remove the 'this.state' from the state references\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    // we know we have an array of monsters [ { name: 'Kriston' }, { name: 'Mash' } ]\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), filteredMonsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", monster.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","logo","jsxDEV","_jsxDEV","App","constructor","props","onSearchChange","event","searchField","target","value","toLocaleLowerCase","setState","state","monsters","console","log","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","includes","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","id"],"sources":["/Users/kristonmcconnell/monsters-rolodex/src/App.js"],"sourcesContent":["import {Component} from \"react\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\n// TODO to change this from a functional component to a class component we changed function App() to\n// TODO class App extends Component and then put the entire return statement inside of a render() { }\n// TODO that's all we need to do to convert on a basic level\n// TODO render() is a method\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // this state is always a json object\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n    console.log('constructor')\n  }\n\n  componentDidMount() {\n    console.log('component did mount')\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      // whatever is returned from the above json will be passed into the users below\n      .then((users) => this.setState(() => {\n        return {monsters: users}\n      },\n      () => {\n        console.log(this.state)\n      }\n      ))\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLocaleLowerCase()\n    this.setState(() => {\n      return {searchField}\n    })\n  }\n\n  render() {\n    console.log('render')\n    // these two consts allow us to remove the 'this.state' from the state references\n    const { monsters, searchField } = this.state\n    const { onSearchChange } = this\n    // we know we have an array of monsters [ { name: 'Kriston' }, { name: 'Mash' } ]\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField)\n    })\n    return (\n      <div className=\"App\">\n        <input className='search-box' type='search' placeholder='search monsters' onChange={\n          onSearchChange\n        } />\n        {\n          filteredMonsters.map((monster) => {\n            return (\n              <div key={monster.id}>\n                <h1> {monster.name} </h1>\n              </div>)\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAE/B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAC1BK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IAAA,KAsBFC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAC1D,IAAI,CAACC,QAAQ,CAAC,MAAM;QAClB,OAAO;UAACJ;QAAW,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;IA1BC,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZN,WAAW,EAAE;IACf,CAAC;IACDO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAC5B;EAEAC,iBAAiBA,CAAA,EAAG;IAClBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCE,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjC;IAAA,CACCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACV,QAAQ,CAAC,MAAM;MACnC,OAAO;QAACE,QAAQ,EAAEQ;MAAK,CAAC;IAC1B,CAAC,EACD,MAAM;MACJP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IACzB,CACA,CAAC,CAAC;EACN;EASAU,MAAMA,CAAA,EAAG;IACPR,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB;IACA,MAAM;MAAEF,QAAQ;MAAEN;IAAY,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5C,MAAM;MAAEP;IAAe,CAAC,GAAG,IAAI;IAC/B;IACA,MAAMkB,gBAAgB,GAAGV,QAAQ,CAACW,MAAM,CAAEC,OAAO,IAAK;MACpD,OAAOA,OAAO,CAACC,IAAI,CAAChB,iBAAiB,CAAC,CAAC,CAACiB,QAAQ,CAACpB,WAAW,CAAC;IAC/D,CAAC,CAAC;IACF,oBACEN,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB5B,OAAA;QAAO2B,SAAS,EAAC,YAAY;QAACE,IAAI,EAAC,QAAQ;QAACC,WAAW,EAAC,iBAAiB;QAACC,QAAQ,EAChF3B;MACD;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEFb,gBAAgB,CAACc,GAAG,CAAEZ,OAAO,IAAK;QAChC,oBACExB,OAAA;UAAA4B,QAAA,eACE5B,OAAA;YAAA4B,QAAA,GAAI,GAAC,EAACJ,OAAO,CAACC,IAAI,EAAC,GAAC;UAAA;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADjBX,OAAO,CAACa,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CAAC;MACV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAEV;AACF;AAEA,eAAelC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}