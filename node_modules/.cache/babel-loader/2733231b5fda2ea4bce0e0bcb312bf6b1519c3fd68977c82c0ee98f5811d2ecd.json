{"ast":null,"code":"var _jsxFileName = \"/Users/kristonmcconnell/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport CardList from './components/CardList/CardList.component';\nimport SearchBox from './components/SearchBox/SearchBox.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // this state is always a json object\n    this.onSearchChange = event => {\n      const searchField = event.target.value.toLocaleLowerCase();\n      this.setState(() => {\n        return {\n          searchField\n        };\n      });\n    };\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n    // whatever is returned from the above json will be passed into the users below\n    .then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }));\n  }\n  render() {\n    // these two consts allow us to remove the 'this.state' from the state references\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const {\n      onSearchChange\n    } = this;\n    // we know we have an array of monsters [ { name: 'Kriston' }, { name: 'Mash' } ]\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        onChangeHandler: onSearchChange,\n        placeholder: \"search monsters\",\n        className: \"search-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filteredMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","CardList","SearchBox","jsxDEV","_jsxDEV","App","constructor","props","onSearchChange","event","searchField","target","value","toLocaleLowerCase","setState","state","monsters","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","includes","className","children","onChangeHandler","placeholder","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kristonmcconnell/monsters-rolodex/src/App.js"],"sourcesContent":["import {Component} from 'react';\n\nimport CardList from './components/CardList/CardList.component';\nimport SearchBox from './components/SearchBox/SearchBox.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // this state is always a json object\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      // whatever is returned from the above json will be passed into the users below\n      .then((users) => this.setState(() => {\n        return {monsters: users}\n      }\n      ))\n  }\n\n  onSearchChange = (event) => {\n    const searchField = event.target.value.toLocaleLowerCase()\n    this.setState(() => {\n      return {searchField}\n    })\n  }\n\n  render() {\n    // these two consts allow us to remove the 'this.state' from the state references\n    const { monsters, searchField } = this.state\n    const { onSearchChange } = this\n    // we know we have an array of monsters [ { name: 'Kriston' }, { name: 'Mash' } ]\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField)\n    })\n    return (\n      <div className=\"App\">\n        <SearchBox onChangeHandler={onSearchChange} placeholder='search monsters' className='search-box' />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAE/B,OAAOC,QAAQ,MAAM,0CAA0C;AAC/D,OAAOC,SAAS,MAAM,4CAA4C;AAClE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASL,SAAS,CAAC;EAC1BM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IAAA,KAiBFC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,iBAAiB,CAAC,CAAC;MAC1D,IAAI,CAACC,QAAQ,CAAC,MAAM;QAClB,OAAO;UAACJ;QAAW,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;IArBC,IAAI,CAACK,KAAK,GAAG;MACXC,QAAQ,EAAE,EAAE;MACZN,WAAW,EAAE;IACf,CAAC;EACH;EAEAO,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACjC;IAAA,CACCF,IAAI,CAAEG,KAAK,IAAK,IAAI,CAACR,QAAQ,CAAC,MAAM;MACnC,OAAO;QAACE,QAAQ,EAAEM;MAAK,CAAC;IAC1B,CACA,CAAC,CAAC;EACN;EASAC,MAAMA,CAAA,EAAG;IACP;IACA,MAAM;MAAEP,QAAQ;MAAEN;IAAY,CAAC,GAAG,IAAI,CAACK,KAAK;IAC5C,MAAM;MAAEP;IAAe,CAAC,GAAG,IAAI;IAC/B;IACA,MAAMgB,gBAAgB,GAAGR,QAAQ,CAACS,MAAM,CAAEC,OAAO,IAAK;MACpD,OAAOA,OAAO,CAACC,IAAI,CAACd,iBAAiB,CAAC,CAAC,CAACe,QAAQ,CAAClB,WAAW,CAAC;IAC/D,CAAC,CAAC;IACF,oBACEN,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB1B,OAAA,CAACF,SAAS;QAAC6B,eAAe,EAAEvB,cAAe;QAACwB,WAAW,EAAC,iBAAiB;QAACH,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnGhC,OAAA,CAACH,QAAQ;QAACe,QAAQ,EAAEQ;MAAiB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV;AACF;AAEA,eAAe/B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}